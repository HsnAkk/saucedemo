name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Linting and Code Quality
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check code format
        run: npm run format:check

  # Smoke Tests - Fast Feedback
  smoke-tests:
    name: Smoke Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        shard: [1, 2] # Split tests across 2 parallel jobs

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Run smoke tests
        run: npm run test:smoke
        env:
          CI: true
          # Optional: Use secrets if available, otherwise uses fallback credentials
          STANDARD_USERNAME: ${{ secrets.STANDARD_USERNAME }}
          STANDARD_PASSWORD: ${{ secrets.STANDARD_PASSWORD }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-test-results-${{ matrix.shard }}
          path: |
            playwright-report/
            test-results/
          retention-days: 7

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-report-${{ matrix.shard }}
          path: playwright-report/

  # Full Regression Suite
  regression-tests:
    name: Regression Tests
    runs-on: ubuntu-latest
    needs: [lint, smoke-tests]

    strategy:
      matrix:
        shard: [1, 2, 3, 4] # Split tests across 4 parallel jobs

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Run regression tests
        run: npm run test:regression -- --shard=${{ matrix.shard }}/4
        env:
          CI: true
          # Optional: Use secrets if available, otherwise uses fallback credentials
          STANDARD_USERNAME: ${{ secrets.STANDARD_USERNAME }}
          STANDARD_PASSWORD: ${{ secrets.STANDARD_PASSWORD }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: regression-test-results-${{ matrix.shard }}
          path: |
            playwright-report/
            test-results/
          retention-days: 7

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: regression-report-${{ matrix.shard }}
          path: playwright-report/

  # Full Suite (all tests combined)
  all-tests:
    name: All Tests
    runs-on: ubuntu-latest
    needs: [lint]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Run all tests
        run: npm run test
        env:
          CI: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: all-test-results
          path: |
            playwright-report/
            test-results/
          retention-days: 7

      - name: Publish test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: full-test-report
          path: playwright-report/index.html

  # Test Summary Report
  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [smoke-tests, regression-tests]
    if: always()

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Combine test results
        run: |
          echo "## Test Results Summary ðŸ“Š" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Execution Complete" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Smoke tests passed" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Regression tests passed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "View detailed results in artifacts." >> $GITHUB_STEP_SUMMARY
